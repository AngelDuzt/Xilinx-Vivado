#############################Design Sources###########################


`timescale 1ns / 1ps
module main(
    input wire [4:0] in,
    output wire f
    );
    
    assign f = 
            (in[4] && in[3] && in[2]) ||
          (in[4] && in[3] && ~in[1]) ||
          (in[4] && in[2] && ~in[1]) ||
          (in[3] && ~in[1] && ~in[0]) ||
          (in[4] && ~in[3] && ~in[2] && in[1]) ||
          (~in[4] && in[3] && in[1] && in[0]) ||
          (in[4] && ~in[1] && ~in[0]) ||
          (~in[4] && ~in[3] && in[2] && in[1]) ||
          (~in[4] && ~in[3] && in[1] && ~in[0]);
endmodule


#############################Simulation Sources###########################


`timescale 1ns / 1ps

module test();
reg[5:0] args;
reg clk;
wire res;
reg [0:31] reference_reg, error_reg;

initial
begin
    reference_reg = 31'h2399BCCF;
    args = 5'b00000;
    clk = 0;
    error_reg = 0;
end

always #10 clk = ~clk;

always@(posedge clk)
begin
    error_reg[args] = res ~^ reference_reg[args];
    args = args + 1;
    if(args == 6'd33)
        $finish;
end
    
main mod_f (.in(args[4:0]), .f(res));

endmodule
